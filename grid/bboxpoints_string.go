// Code generated by "stringer -type=BBoxPoints"; DO NOT EDIT.

package grid

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BBLeft-0]
	_ = x[BBCenter-1]
	_ = x[BBRight-2]
	_ = x[BBTop-3]
	_ = x[BBMiddle-4]
	_ = x[BBBottom-5]
	_ = x[BBoxPointsN-6]
}

const _BBoxPoints_name = "BBLeftBBCenterBBRightBBTopBBMiddleBBBottomBBoxPointsN"

var _BBoxPoints_index = [...]uint8{0, 6, 14, 21, 26, 34, 42, 53}

func (i BBoxPoints) String() string {
	if i < 0 || i >= BBoxPoints(len(_BBoxPoints_index)-1) {
		return "BBoxPoints(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _BBoxPoints_name[_BBoxPoints_index[i]:_BBoxPoints_index[i+1]]
}

func (i *BBoxPoints) FromString(s string) error {
	for j := 0; j < len(_BBoxPoints_index)-1; j++ {
		if s == _BBoxPoints_name[_BBoxPoints_index[j]:_BBoxPoints_index[j+1]] {
			*i = BBoxPoints(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: BBoxPoints")
}
