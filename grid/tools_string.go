// Code generated by "stringer -type=Tools"; DO NOT EDIT.

package grid

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SelectTool-0]
	_ = x[NodeTool-1]
	_ = x[RectTool-2]
	_ = x[CircleTool-3]
	_ = x[PathTool-4]
	_ = x[TextTool-5]
	_ = x[ToolsN-6]
}

const _Tools_name = "SelectToolNodeToolRectToolCircleToolPathToolTextToolToolsN"

var _Tools_index = [...]uint8{0, 10, 18, 26, 36, 44, 52, 58}

func (i Tools) String() string {
	if i < 0 || i >= Tools(len(_Tools_index)-1) {
		return "Tools(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Tools_name[_Tools_index[i]:_Tools_index[i+1]]
}

func (i *Tools) FromString(s string) error {
	for j := 0; j < len(_Tools_index)-1; j++ {
		if s == _Tools_name[_Tools_index[j]:_Tools_index[j+1]] {
			*i = Tools(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Tools")
}
