// Code generated by "stringer -type=MarkerColors"; DO NOT EDIT.

package grid

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MarkerStdColor-0]
	_ = x[MarkerCopyColor-1]
	_ = x[MarkerCustomColor-2]
	_ = x[MarkerColorsN-3]
}

const _MarkerColors_name = "MarkerStdColorMarkerCopyColorMarkerCustomColorMarkerColorsN"

var _MarkerColors_index = [...]uint8{0, 14, 29, 46, 59}

func (i MarkerColors) String() string {
	if i < 0 || i >= MarkerColors(len(_MarkerColors_index)-1) {
		return "MarkerColors(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MarkerColors_name[_MarkerColors_index[i]:_MarkerColors_index[i+1]]
}

func (i *MarkerColors) FromString(s string) error {
	for j := 0; j < len(_MarkerColors_index)-1; j++ {
		if s == _MarkerColors_name[_MarkerColors_index[j]:_MarkerColors_index[j+1]] {
			*i = MarkerColors(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: MarkerColors")
}
