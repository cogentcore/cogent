// Code generated by "stringer -type=AlignAnchors"; DO NOT EDIT.

package grid

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AlignFirst-0]
	_ = x[AlignLast-1]
	_ = x[AlignDrawing-2]
	_ = x[AlignSelectBox-3]
	_ = x[AlignAnchorsN-4]
}

const _AlignAnchors_name = "AlignFirstAlignLastAlignDrawingAlignSelectBoxAlignAnchorsN"

var _AlignAnchors_index = [...]uint8{0, 10, 19, 31, 45, 58}

func (i AlignAnchors) String() string {
	if i < 0 || i >= AlignAnchors(len(_AlignAnchors_index)-1) {
		return "AlignAnchors(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AlignAnchors_name[_AlignAnchors_index[i]:_AlignAnchors_index[i+1]]
}

func (i *AlignAnchors) FromString(s string) error {
	for j := 0; j < len(_AlignAnchors_index)-1; j++ {
		if s == _AlignAnchors_name[_AlignAnchors_index[j]:_AlignAnchors_index[j+1]] {
			*i = AlignAnchors(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: AlignAnchors")
}
