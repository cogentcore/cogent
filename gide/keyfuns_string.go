// Code generated by "stringer -type=KeyFuns"; DO NOT EDIT.

package gide

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KeyFunNil-0]
	_ = x[KeyFunNeeds2-1]
	_ = x[KeyFunNextPanel-2]
	_ = x[KeyFunPrevPanel-3]
	_ = x[KeyFunFileOpen-4]
	_ = x[KeyFunBufSelect-5]
	_ = x[KeyFunBufClone-6]
	_ = x[KeyFunBufSave-7]
	_ = x[KeyFunBufSaveAs-8]
	_ = x[KeyFunBufClose-9]
	_ = x[KeyFunExecCmd-10]
	_ = x[KeyFunRectCopy-11]
	_ = x[KeyFunRectCut-12]
	_ = x[KeyFunRectPaste-13]
	_ = x[KeyFunRegCopy-14]
	_ = x[KeyFunRegPaste-15]
	_ = x[KeyFunCommentOut-16]
	_ = x[KeyFunIndent-17]
	_ = x[KeyFunJump-18]
	_ = x[KeyFunSetSplit-19]
	_ = x[KeyFunBuildProj-20]
	_ = x[KeyFunRunProj-21]
	_ = x[KeyFunsN-22]
}

const _KeyFuns_name = "KeyFunNilKeyFunNeeds2KeyFunNextPanelKeyFunPrevPanelKeyFunFileOpenKeyFunBufSelectKeyFunBufCloneKeyFunBufSaveKeyFunBufSaveAsKeyFunBufCloseKeyFunExecCmdKeyFunRectCopyKeyFunRectCutKeyFunRectPasteKeyFunRegCopyKeyFunRegPasteKeyFunCommentOutKeyFunIndentKeyFunJumpKeyFunSetSplitKeyFunBuildProjKeyFunRunProjKeyFunsN"

var _KeyFuns_index = [...]uint16{0, 9, 21, 36, 51, 65, 80, 94, 107, 122, 136, 149, 163, 176, 191, 204, 218, 234, 246, 256, 270, 285, 298, 306}

func (i KeyFuns) String() string {
	if i < 0 || i >= KeyFuns(len(_KeyFuns_index)-1) {
		return "KeyFuns(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _KeyFuns_name[_KeyFuns_index[i]:_KeyFuns_index[i+1]]
}

func (i *KeyFuns) FromString(s string) error {
	for j := 0; j < len(_KeyFuns_index)-1; j++ {
		if s == _KeyFuns_name[_KeyFuns_index[j]:_KeyFuns_index[j+1]] {
			*i = KeyFuns(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: KeyFuns")
}
