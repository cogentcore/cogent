// Code generated by 'yaegi extract cogentcore.org/core/tensor/tensorview'. DO NOT EDIT.

package imports

import (
	"cogentcore.org/core/tensor/tensorview"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/tensor/tensorview/tensorview"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"LabelSpace":     reflect.ValueOf(tensorview.LabelSpace),
		"NewSimMatGrid":  reflect.ValueOf(tensorview.NewSimMatGrid),
		"NewTableView":   reflect.ValueOf(tensorview.NewTableView),
		"NewTensorGrid":  reflect.ValueOf(tensorview.NewTensorGrid),
		"SimMatGridType": reflect.ValueOf(&tensorview.SimMatGridType).Elem(),
		"TableViewType":  reflect.ValueOf(&tensorview.TableViewType).Elem(),
		"TensorGridType": reflect.ValueOf(&tensorview.TensorGridType).Elem(),

		// type definitions
		"SimMatGrid":      reflect.ValueOf((*tensorview.SimMatGrid)(nil)),
		"SimMatValue":     reflect.ValueOf((*tensorview.SimMatValue)(nil)),
		"TableValue":      reflect.ValueOf((*tensorview.TableValue)(nil)),
		"TableView":       reflect.ValueOf((*tensorview.TableView)(nil)),
		"TensorDisplay":   reflect.ValueOf((*tensorview.TensorDisplay)(nil)),
		"TensorGrid":      reflect.ValueOf((*tensorview.TensorGrid)(nil)),
		"TensorGridValue": reflect.ValueOf((*tensorview.TensorGridValue)(nil)),
		"TensorLayout":    reflect.ValueOf((*tensorview.TensorLayout)(nil)),
		"TensorValue":     reflect.ValueOf((*tensorview.TensorValue)(nil)),
	}
}
