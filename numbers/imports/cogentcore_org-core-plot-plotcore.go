// Code generated by 'yaegi extract cogentcore.org/core/plot/plotcore'. DO NOT EDIT.

package imports

import (
	"cogentcore.org/core/plot/plotcore"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/plot/plotcore/plotcore"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Bar":                reflect.ValueOf(plotcore.Bar),
		"FixMax":             reflect.ValueOf(plotcore.FixMax),
		"FixMin":             reflect.ValueOf(plotcore.FixMin),
		"FloatMax":           reflect.ValueOf(plotcore.FloatMax),
		"FloatMin":           reflect.ValueOf(plotcore.FloatMin),
		"MetaMapLower":       reflect.ValueOf(plotcore.MetaMapLower),
		"NewPlot":            reflect.ValueOf(plotcore.NewPlot),
		"NewPlotEditor":        reflect.ValueOf(plotcore.NewPlotEditor),
		"NewSubPlot":         reflect.ValueOf(plotcore.NewSubPlot),
		"NewTableXY":         reflect.ValueOf(plotcore.NewTableXY),
		"NewTableXYName":     reflect.ValueOf(plotcore.NewTableXYName),
		"Off":                reflect.ValueOf(plotcore.Off),
		"On":                 reflect.ValueOf(plotcore.On),
		"PlotColumnsHeaderN": reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"PlotTypesN":         reflect.ValueOf(plotcore.PlotTypesN),
		"PlotTypesValues":    reflect.ValueOf(plotcore.PlotTypesValues),
		"XY":                 reflect.ValueOf(plotcore.XY),

		// type definitions
		"ColumnParams": reflect.ValueOf((*plotcore.ColumnParams)(nil)),
		"Plot":         reflect.ValueOf((*plotcore.Plot)(nil)),
		"PlotParams":   reflect.ValueOf((*plotcore.PlotParams)(nil)),
		"PlotTypes":    reflect.ValueOf((*plotcore.PlotTypes)(nil)),
		"PlotEditor":     reflect.ValueOf((*plotcore.PlotEditor)(nil)),
		"TableXY":      reflect.ValueOf((*plotcore.TableXY)(nil)),
	}
}
