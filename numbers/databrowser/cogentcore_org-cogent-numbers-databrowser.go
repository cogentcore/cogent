// Code generated by 'yaegi extract cogentcore.org/cogent/numbers/databrowser'. DO NOT EDIT.

package databrowser

import (
	"cogentcore.org/cogent/numbers/databrowser"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/cogent/numbers/databrowser/databrowser"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BrowserType":        reflect.ValueOf(&databrowser.BrowserType).Elem(),
		"CleanCatTSV":        reflect.ValueOf(databrowser.CleanCatTSV),
		"FileNodeType":       reflect.ValueOf(&databrowser.FileNodeType).Elem(),
		"FirstComment":       reflect.ValueOf(databrowser.FirstComment),
		"IsTableFile":        reflect.ValueOf(databrowser.IsTableFile),
		"MapTypes":           reflect.ValueOf(&databrowser.MapTypes).Elem(),
		"NewBrowser":         reflect.ValueOf(databrowser.NewBrowser),
		"NewBrowserWindow":   reflect.ValueOf(databrowser.NewBrowserWindow),
		"NewDiffBrowserDirs": reflect.ValueOf(databrowser.NewDiffBrowserDirs),
		"NewFileNode":        reflect.ValueOf(databrowser.NewFileNode),
		"ParentBrowser":      reflect.ValueOf(databrowser.ParentBrowser),
		"PromptOKCancel":     reflect.ValueOf(databrowser.PromptOKCancel),
		"PromptString":       reflect.ValueOf(databrowser.PromptString),
		"PromptStruct":       reflect.ValueOf(databrowser.PromptStruct),
		"Symbols":            reflect.ValueOf(&databrowser.Symbols).Elem(),
		"TheBrowser":         reflect.ValueOf(&databrowser.TheBrowser).Elem(),
		"TrimOrderPrefix":    reflect.ValueOf(databrowser.TrimOrderPrefix),

		// type definitions
		"Browser":  reflect.ValueOf((*databrowser.Browser)(nil)),
		"FileNode": reflect.ValueOf((*databrowser.FileNode)(nil)),
	}
}
