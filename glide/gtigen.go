// Code generated by "core generate -add-types"; DO NOT EDIT.

package glide

import (
	"cogentcore.org/core/gti"
	"cogentcore.org/core/ki"
)

// PageType is the [gti.Type] for [Page]
var PageType = gti.AddType(&gti.Type{Name: "cogentcore.org/cogent/glide.Page", IDName: "page", Doc: "Page represents one web browser page", Embeds: []gti.Field{{Name: "Frame"}}, Fields: []gti.Field{{Name: "History", Doc: "The history of URLs that have been visited. The oldest page is first."}, {Name: "Context", Doc: "Context is the page's [coredom.Context]."}}, Instance: &Page{}})

// NewPage adds a new [Page] with the given name to the given parent:
// Page represents one web browser page
func NewPage(par ki.Ki, name ...string) *Page {
	return par.NewChild(PageType, name...).(*Page)
}

// KiType returns the [*gti.Type] of [Page]
func (t *Page) KiType() *gti.Type { return PageType }

// New returns a new [*Page] value
func (t *Page) New() ki.Ki { return &Page{} }

// SetTooltip sets the [Page.Tooltip]
func (t *Page) SetTooltip(v string) *Page { t.Tooltip = v; return t }

// SetStackTop sets the [Page.StackTop]
func (t *Page) SetStackTop(v int) *Page { t.StackTop = v; return t }
